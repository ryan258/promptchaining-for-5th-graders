# .env.example - The Secrets Template
# Copy this file to .env and fill in your real keys
# Think of this as a treasure map without the actual treasure marked

# ============================================================================
# THE PHILOSOPHY OF SECRETS
# ============================================================================
# This file serves a beautiful dual purpose:
# 1. It shows what secrets your application needs (the shape of trust)
# 2. It keeps the actual secrets safe (the substance of security)
# 
# It's like showing someone the lock without giving them the key.
# ============================================================================

# ----------------------------------------------------------------------------
# GOOGLE AI CONFIGURATION - Your Gateway to Gemini's Wisdom
# ----------------------------------------------------------------------------

# Your Google AI API Key - This is your passport to Gemini's capabilities
# üîë Get yours at: https://makersuite.google.com/app/apikey
# üí° Google provides free credits to start your journey
# üéØ Example format: AIzaSyD_example_key_not_real_1234567890
GOOGLE_API_KEY=your_google_ai_api_key_here

# Optional: Project ID if you're using Google Cloud Console
# üè¢ Usually looks like: my-project-name-123456
# GOOGLE_PROJECT_ID=your_project_id_here

# ----------------------------------------------------------------------------
# ALTERNATIVE AI PROVIDERS - Future-Proofing Your Adventures
# ----------------------------------------------------------------------------

# Anthropic Claude API Key (if you want to experiment with Claude too)
# üîë Get yours at: https://console.anthropic.com/
# üí∞ More expensive but extremely capable
# ANTHROPIC_API_KEY=sk-ant-api03-your_claude_key_here

# OpenAI API Key (for GPT models)
# üîë Get yours at: https://platform.openai.com/api-keys
# üåü The classic choice, many models available
# OPENAI_API_KEY=sk-your_openai_key_here

# Hugging Face API Token (for open source models)
# üîë Get yours at: https://huggingface.co/settings/tokens
# ü§ó Great for experimenting with open source AI
# HUGGINGFACE_API_TOKEN=hf_your_token_here

# ----------------------------------------------------------------------------
# APPLICATION CONFIGURATION - Tuning Your Experience
# ----------------------------------------------------------------------------

# Default model to use (helps you switch easily)
DEFAULT_MODEL=gemini-2.5-flash

# Maximum tokens per response (controls length and cost)
MAX_TOKENS=1000

# Temperature setting (0.0 = focused, 1.0 = creative)
DEFAULT_TEMPERATURE=0.5

# Enable debug mode for learning (true/false)
DEBUG_MODE=false

# Output directory for generated files
OUTPUT_DIR=./outputs

# ----------------------------------------------------------------------------
# DEVELOPMENT SETTINGS - Tools for Building Better
# ----------------------------------------------------------------------------

# Environment type (development, testing, production)
ENVIRONMENT=development

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable experiment tracking (for advanced users)
TRACK_EXPERIMENTS=false

# Cache responses to save money during development (true/false)
CACHE_RESPONSES=true

# ----------------------------------------------------------------------------
# SAFETY AND LIMITS - Responsible AI Usage
# ----------------------------------------------------------------------------

# Maximum requests per minute (to prevent accidental cost explosions)
RATE_LIMIT_PER_MINUTE=60

# Maximum monthly spending limit in USD (safety net)
MONTHLY_SPENDING_LIMIT=10

# Content filtering level (strict, moderate, permissive)
CONTENT_FILTER=moderate

# Enable cost monitoring alerts (true/false)
COST_ALERTS=true

# ============================================================================
# SETUP INSTRUCTIONS FOR YOUNG BUILDERS
# ============================================================================
#
# 1. COPY THIS FILE:
#    cp .env.example .env
#
# 2. GET YOUR GOOGLE AI KEY:
#    - Visit https://makersuite.google.com/app/apikey
#    - Sign in with your Google account
#    - Click "Create API Key"
#    - Copy the key that starts with "AIzaSy..."
#
# 3. EDIT YOUR .env FILE:
#    - Replace "your_google_ai_api_key_here" with your real key
#    - Adjust other settings as you learn and grow
#
# 4. NEVER SHARE YOUR .env FILE:
#    - It contains your secret keys
#    - Anyone with your keys can use your AI credits
#    - Always keep .env in your .gitignore file
#
# 5. TEST YOUR SETUP:
#    python main.py
#
# ============================================================================

# ============================================================================
# THE DEEPER WISDOM OF CONFIGURATION
# ============================================================================
#
# This file teaches several important principles:
#
# üîê SEPARATION OF CONCERNS
# We separate what the code needs to know (variable names) from what
# should remain private (actual values). This is like having a recipe
# that calls for "secret sauce" without revealing the recipe for the sauce.
#
# üéõÔ∏è CONFIGURATION AS CODE
# By making settings explicit and documented, we turn invisible assumptions
# into visible choices. Every setting becomes a conscious decision rather
# than a hidden default.
#
# üõ°Ô∏è SECURITY BY DESIGN
# We build security into the foundation rather than adding it as an afterthought.
# The .env pattern makes it almost impossible to accidentally commit secrets.
#
# üîÑ FLEXIBILITY AND EVOLUTION
# As you grow and experiment, you can easily switch models, adjust settings,
# and add new capabilities without changing your core code. The configuration
# becomes a control panel for your AI adventures.
#
# üéì PROFESSIONAL PRACTICES
# You're learning the same patterns used by professional developers at
# companies around the world. These skills transfer to any project you'll
# ever build.
#
# Remember: Good configuration is like good architecture - it anticipates
# change while providing stability, offers flexibility while maintaining
# simplicity, and makes the invisible visible.
#
# ============================================================================